import matplotlib.pyplot as plt
import numpy as np

numbers =[
    [
        [1, 1, 1],
        [1, 0, 1],
        [1, 0, 1],
        [1, 0, 1],
        [1, 1, 1],
    ],
    [
        [0, 0, 1],
        [0, 1, 1],
        [0, 0, 1],
        [0, 0, 1],
        [1, 1, 1],
    ],
    [
        [1, 1, 1],
        [0, 0, 1],
        [1, 1, 1],
        [1, 0, 0],
        [1, 1, 1],
    ],
    [
        [1, 1, 1],
        [0, 0, 1],
        [1, 1, 1],
        [0, 0, 1],
        [1, 1, 1],
    ],
    [
        [1, 0, 1],
        [1, 0, 1],
        [1, 1, 1],
        [0, 0, 1],
        [0, 0, 1],
    ],
    [
        [1, 1, 1],
        [1, 0, 0],
        [1, 1, 1],
        [0, 0, 1],
        [1, 1, 1],
    ],
    [
        [1, 1, 1],
        [1, 0, 0],
        [1, 1, 1],
        [1, 0, 1],
        [1, 1, 1],
    ],
    [
        [1, 1, 1],
        [0, 0, 1],
        [0, 0, 1],
        [0, 0, 1],
        [0, 0, 1],
    ],
    [
        [1, 1, 1],
        [1, 0, 1],
        [1, 1, 1],
        [1, 0, 1],
        [1, 1, 1],
    ],
    [
        [1, 1, 1],
        [1, 0, 1],
        [1, 1, 1],
        [0, 0, 1],
        [1, 1, 1],
    ],
]

def perceptron(sensor, weights, bias):
    s = 0
    for col in range(len(sensor)):
        for i in range(len(sensor[col])):
            s += int(sensor[col][i]) * weights[col][i]
    if s >= bias:
        return 1
    else:
        return 0



def is_number(sensor):
    number_weights =[
        [
            [1, 1, 1],
            [1, -1, 1],
            [1, -1, 1],
            [1, -1, 1],
            [1, 1, 1],
        ],
        [
            [-1, -1, 1],
            [-1, 1, 1],
            [-1, -1, 1],
            [-1, -1, 1],
            [1, 1, 1],
        ],
        [
            [1, 1, 1],
            [-1, -1, 1],
            [1, 1, 1],
            [1, -1, -1],
            [1, 1, 1],
        ],
        [
            [1, 1, 1],
            [-1, -1, 1],
            [1, 1, 1],
            [-1, -1, 1],
            [1, 1, 1],
        ],
        [
            [1, -1, 1],
            [1, -1, 1],
            [1, 1, 1],
            [-1, -1, 1],
            [-1, -1, 1],
        ],
        [
            [1, 1, 1],
            [1, -1, -1],
            [1, 1, 1],
            [-1, -1, 1],
            [1, 1, 1],
        ],
        [
            [1, 1, 1],
            [1, -1, -1],
            [1, 1, 1],
            [1, -1, 1],
            [1, 1, 1],
        ],
        [
            [1, 1, 1],
            [-1, -1, 1],
            [-1, -1, 1],
            [-1, -1, 1],
            [-1, -1, 1],
        ],
        [
            [1, 1, 1],
            [1, -1, 1],
            [1, 1, 1],
            [1, -1, 1],
            [1, 1, 1],
        ],
        [
            [1, 1, 1],
            [1, -1, 1],
            [1, 1, 1],
            [-1, -1, 1],
            [1, 1, 1],
        ],
    ]
    number_biases = [-3.5, -1.5, -1.5, -2.5, -2.5, -2.5, -2.5, -2.5, -2.5, -2.5]
    for i in range(10):
        if perceptron(sensor, number_weights[i], number_biases[i]) == 1:
            print(i)
    return -1

for number in numbers:
    print(is_number(number))

outputs = [0, 1,2,3,4,5,6,7,8,9] 

# Visualizing the dataset
for digit, output in zip(numbers, outputs):
    plt.imshow(digit)
    plt.title(f"Digit {output}")
    plt.show()