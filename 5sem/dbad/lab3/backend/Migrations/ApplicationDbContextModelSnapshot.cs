// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using backend;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("lab3")
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("backend.EduDocs", b =>
                {
                    b.Property<string>("Inila")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RegEduDoc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SndEduDoc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Inila");

                    b.HasIndex("RegEduDoc");

                    b.ToTable("EduDocs", "lab3");
                });

            modelBuilder.Entity("backend.HFInfo", b =>
                {
                    b.Property<string>("Inila")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateOrd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdInfo")
                        .HasColumnType("integer");

                    b.Property<string>("RegOrgNum")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Inila");

                    b.HasIndex("RegOrgNum");

                    b.ToTable("HfInfos", "lab3");
                });

            modelBuilder.Entity("backend.Institut", b =>
                {
                    b.Property<string>("RegEduDoc")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RegEduDoc");

                    b.ToTable("Instituts", "lab3");
                });

            modelBuilder.Entity("backend.PersonalData", b =>
                {
                    b.Property<string>("Fcs")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Inila")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Itn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Kids")
                        .HasColumnType("integer");

                    b.Property<bool?>("Married")
                        .HasColumnType("boolean");

                    b.Property<string>("SnPassport")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Fcs");

                    b.HasIndex("Inila");

                    b.ToTable("PersonalDatas", "lab3");
                });

            modelBuilder.Entity("backend.Work", b =>
                {
                    b.Property<string>("RegOrgNum")
                        .HasColumnType("text");

                    b.Property<string>("ItnOrg")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameOrg")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OrgAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RegOrgNum");

                    b.ToTable("Works", "lab3");
                });

            modelBuilder.Entity("backend.EduDocs", b =>
                {
                    b.HasOne("backend.Institut", "Institut")
                        .WithMany()
                        .HasForeignKey("RegEduDoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institut");
                });

            modelBuilder.Entity("backend.HFInfo", b =>
                {
                    b.HasOne("backend.Work", "Work")
                        .WithMany()
                        .HasForeignKey("RegOrgNum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Work");
                });

            modelBuilder.Entity("backend.PersonalData", b =>
                {
                    b.HasOne("backend.HFInfo", "HfInfo")
                        .WithMany()
                        .HasForeignKey("Inila")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HfInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
